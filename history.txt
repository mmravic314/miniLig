# mravic Marco, DeGrado lab miniprotein design

Take complex of pdl1 and pdr1, and extract 3 bstrands in PDL1 closest to PDR1

From nearest 2 beta strands, cut the middle 5 and 6 residues from the two strands
Use this as a Master search query. Master executables v1.3 from

Database: v2_162901_bc_30-scPDB
	single-chain pdb database with 30% sequence ID, rfree< 0.25 and 3.2 A resolution, Xray only
	contains PDS, and another directory has the original PDB files: ~/v2_162901_bc_30-scPDB_oPDB/

### Section 1: where are the 'low energy' places to dock a helix on this pair of anti-parallel strands ###

>> mkdir 1_locateHelix
>> cd 1_locateHelix

>> ~/bin/createPDS --type query --pdb pdL1_EE.pdb

>> ~/bin/master --query pdL1_EE.pds --targetList $path2database --bbRMSD --rmsdCut 0.8 --topN 10000 --matchOut pdL1_EE.m --structOut matches/ --seqOut pdL1_EE.s

# result: highest RMSD of the first 10k matches is <0.6 so we can easily increase if more helices

# look in original PDB files from master search, find nearby helices and save to pdb file
# save only 8 residue fragments... 

>> python ../bin/1_findHelices.py pdL1_EE.m ~/v2_162901_bc_30-scPDB_oPDB/ pdL1_EE.pdb matches/ > 1_locateHelixLOG.txt

# 223 8-residue helices saved to new directory 'locaed_helices_8res'; and full helix found in '*FULL'

##### Section 1 end #####



##### Section 2 #########

# Cluster the mini-helices! Make sure to save the pairwise RMSD matrix to a pkl
# then do a hierarchical with a cutoff at 1 A. 
# then k-medoids of just the main cluster

# ACTUALLY JUST VISUALLY PICKED A TIGHT CLUSTER!! 
# made 3 other pdb's for other clusters 


##### Section 2  END ####


#### Section 3  #########

#renumber the res file based on the desired topology
# then do a quick minimization and repack stage
# make backbone restraints and fixed AA identity at: 3,10,12,18,19,20,21 (actutally these resnums funny... but just know interface fixed!)
# Also fix the manually found disulfide: 23-29

> python 3_relax.py ~/rosetta/ pdL1-Mini1_EEEH.pdb  3_relaxTHIN.xml Resfile.txt  3_relax-Mini1_EEEH.cst relax_outputs/


# Now search for each loop...
# Loop 1:  C-term is chain C resi 2-5, N term is chain A resi 12-15
# LOOP 2:  C-term is chain A resi 23-27, Nterm is chain B resi 31-35

# First had 5000 < 0.36 RMSD

# second had ~4400 at 0.9 RMSD

# example command line for loop2_template.pdb

>> mkdir loop2_finder
>> cd loop2_finder
>> mkdir matches
>> createPDS --type query --pdb ../loop2_template.pdb
>> master --query loop2_template.pds --targetList ~/aqMasterDB/v2_162901_bc_30-scPDB/list.txt --rmsdCut 0.9 --topN 5000 --bbRMSD --matchOut loop2_template.m --seqOut loop2_template.s --structOut matches


>> python ~/bin/loopFinder_Clust.py ../loop2_template.pdb loop2_template.m ~/v2_162901_bc_30-scPDB_oPDB/ matches/

2 8
3 34
4 62
5 104
6 75
7 48
8 58
9 49
10 31
most common loop: 5 ....now clustering...
at cutoff 1.80 Angstrom, Unique clusters found: 17 

top 2 clusters (percent): 7 (25.0); 4 (13.5)
loops per cluster: [(7, 26), (4, 14), (15, 14), (3, 9), (14, 9), (16, 8), (12, 7), (2, 4), (1, 2), (6, 2), (9, 2), (10, 2), (5, 1), (8, 1), (11, 1), (13, 1), (17, 1)]
moving cluster members to new dir for c1 & c2, +fastas

>> python ~/bin/loopFinder_Clust.py ../loop1_template.pdb loop1_template.m ~/v2_162901_bc_30-scPDB_oPDB/ matches/

1 5
2 5
3 5
4 17
5 249
6 228
7 110
8 52
9 79
10 91
most common loop: 5 ....now clustering...
at cutoff 1.80 Angstrom, Unique clusters found: 16 

top 2 clusters (percent): 13 (21.3); 12 (17.7)
loops per cluster: [(13, 53), (12, 44), (14, 36), (10, 34), (3, 30), (4, 22), (5, 12), (8, 5), (15, 3), (1, 2), (9, 2), (11, 2), (2, 1), (6, 1), (7, 1), (16, 1)]
moving cluster members to new dir for c1 & c2, +fastas

## for loop1, also clustered len=6
top 2 clusters (percent): 22 (27.3); 13 (17.3)
loops per cluster: [(22, 68), (13, 43), (2, 22), (1, 13), (18, 12), (7, 11), (15, 8), (16, 7), (14, 6), (5, 5), (10, 5), (4, 4), (6, 4), (9, 4), (17, 4), (20, 4), (19, 2), (21, 2), (3, 1), (8, 1), (11, 1), (12, 1)]
moving cluster members to new dir for c1 & c2, +fastas


#### Section 3 END  #####

